{
  "openapi": "3.1.0",
  "info": {
    "title": "FastAPI",
    "version": "0.1.0"
  },
  "paths": {
    "/api/v1/users/getUsers": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get Users",
        "operationId": "get_users_api_v1_users_getUsers_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GetUser"
                  },
                  "type": "array",
                  "title": "Response 200 Get Users Api V1 Users Getusers Get"
                },
                "example": [
                  {
                    "id": 0,
                    "username": "Alex",
                    "email": "alex@gmail.com",
                    "createdAt": "2024-04-17T13:07:25.709Z"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/users/createUser": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create User",
        "operationId": "create_user_api_v1_users_createUser_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                },
                "example": {
                  "access_token": "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3",
                  "token_type": "bearer"
                }
              }
            }
          },
          "409": {
            "description": "Conflict Error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Conflict user data!"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/signIn": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Sign In",
        "operationId": "sign_in_api_v1_users_signIn_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_sign_in_api_v1_users_signIn_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                },
                "example": {
                  "access_token": "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3",
                  "token_type": "bearer"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Invalid password!"
                }
              }
            }
          },
          "404": {
            "description": "Not found Error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "User doesnt exist!"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/myProfile": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "My Profile",
        "operationId": "my_profile_api_v1_users_myProfile_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUser"
                },
                "example": {
                  "id": 0,
                  "username": "Alex",
                  "email": "alex@gmail.com",
                  "createdAt": "2024-04-17T13:07:25.709Z"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Invalid JWT token!"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/users/updateProfile": {
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Update Profile",
        "operationId": "update_profile_api_v1_users_updateProfile_patch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUser"
                },
                "example": {
                  "id": 0,
                  "username": "Alex",
                  "email": "alex@gmail.com",
                  "createdAt": "2024-04-17T13:07:25.709Z"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Invalid JWT token!"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/users/updatePassword": {
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Update Password",
        "operationId": "update_password_api_v1_users_updatePassword_patch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePassword"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Unauthorized Error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Invalid JWT token!"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/users/myFriends": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "My Friends",
        "operationId": "my_friends_api_v1_users_myFriends_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "integer"
                  },
                  "type": "array",
                  "title": "Response 200 My Friends Api V1 Users Myfriends Get"
                },
                "example": [
                  1
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized Error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Invalid JWT token!"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/users/addFriend": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Add Friend",
        "operationId": "add_friend_api_v1_users_addFriend_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "friend_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Friend Id"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  },
                  "title": "Response 201 Add Friend Api V1 Users Addfriend Post"
                },
                "example": [
                  1,
                  2
                ]
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "example": {
                  "detail": "Invalid JWT token!"
                }
              }
            },
            "description": "Unauthorized Error"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "detail": "Friend not found!"
                }
              }
            },
            "description": "Not found Error"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "detail": "Friend already in user`s friends!"
                }
              }
            },
            "description": "Conflict Error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/removeFriend": {
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Remove Friend",
        "operationId": "remove_friend_api_v1_users_removeFriend_delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "friend_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Friend Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "content": {
              "application/json": {
                "example": {
                  "detail": "Invalid JWT token!"
                }
              }
            },
            "description": "Unauthorized Error"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "detail": "Friend not found!"
                }
              }
            },
            "description": "Not found Error"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "detail": "No same user in user`s friends!"
                }
              }
            },
            "description": "Conflict Error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Body_sign_in_api_v1_users_signIn_post": {
        "properties": {
          "grant_type": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "password"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grant Type"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "scope": {
            "type": "string",
            "title": "Scope",
            "default": ""
          },
          "client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "Body_sign_in_api_v1_users_signIn_post"
      },
      "CreateUser": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "username",
          "email",
          "password"
        ],
        "title": "CreateUser"
      },
      "GetUser": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          }
        },
        "type": "object",
        "required": [
          "id",
          "username",
          "email",
          "createdAt"
        ],
        "title": "GetUser"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "Token": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "token_type"
        ],
        "title": "Token"
      },
      "UpdatePassword": {
        "properties": {
          "old_password": {
            "type": "string",
            "title": "Old Password"
          },
          "new_password": {
            "type": "string",
            "title": "New Password"
          }
        },
        "type": "object",
        "required": [
          "old_password",
          "new_password"
        ],
        "title": "UpdatePassword"
      },
      "UpdateUser": {
        "properties": {
          "new_username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "New Username"
          },
          "new_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "New Email"
          }
        },
        "type": "object",
        "title": "UpdateUser"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": {
          "password": {
            "scopes": {},
            "tokenUrl": "/api/v1/users/signIn"
          }
        }
      }
    }
  }
}